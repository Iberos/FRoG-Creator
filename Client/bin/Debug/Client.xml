<?xml version="1.0"?>
<doc>
<assembly>
<name>
Client
</name>
</assembly>
<members>
<member name="M:Client.GUIActionCase.Move(System.Int32,System.Int32)">
	<summary>
 Déplace le composant vers la position spécifiée en prenant en compte la position relative de selection
 </summary>
	<param name="X">Position horizontale de la selection</param>
	<param name="Y">Position verticale de la selection</param>
	<remarks></remarks>
</member><member name="P:Client.GUIActionCase.IsEmpty">
	<summary>
 Défini ou obtient l'état du composant : Possibilité d'aquérir ou non un composant par Glisser Et Déposer
 </summary>
	<value>True si composant parent, False si composant enfant</value>
	<returns>True si composant parent, False si composant enfant</returns>
	<remarks></remarks>
</member><member name="P:Client.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Client.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Client.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:Client.ContentManager.Load``1(System.String)">
	<summary>
 Charge la ressource depuis le dictionnaire de données
 </summary>
	<typeparam name="T">Le type de la ressource à charger</typeparam>
	<param name="key">La clé référente à la ressource</param>
	<returns>La ressource si elle existe, 'Nothing' dans le cas contraire</returns>
	<remarks></remarks>
</member><member name="M:Client.ContentManager.Add``1(System.String,``0)">
	<summary>
 Ajoute la ressource dans le dictionnaire de données
 </summary>
	<typeparam name="T">Le type de la ressource à ajouter</typeparam>
	<param name="key">La clé permettant de référencer la ressource</param>
	<param name="obj">L'instance d'objet définissant la ressource</param>
	<returns>Vrai si la ressource a été ajouté, Faux dans le cas contraire</returns>
	<remarks></remarks>
</member><member name="M:Client.GameCharacter.SetCharacterControlState(System.Boolean@)">
	<summary>
 Modifie l'état de controle du personnage
 </summary>
	<param name="state">True pour laisser le character controlable et False pour en interdire le controle</param>
	<remarks></remarks>
</member><member name="M:Client.GameCharacter.SetVelocity(Client.GameVelocity@)">
	<summary>
 Modifie la vitesse de course du personnage
 </summary>
	<param name="velocity">La vitesse</param>
	<remarks></remarks>
</member><member name="M:Client.GameCharacter.SetTexture(SFML.Graphics.Texture)">
	<summary>
 Modifie le rendu du personnage
 </summary>
	<param name="texture">La nouvelle texture de rendu</param>
	<remarks></remarks>
</member><member name="M:Client.GameCharacter.SetDirection(Client.GameDirection)">
	<summary>
 Définit la direction du personnage
 </summary>
	<param name="direction">La direction</param>
	<remarks></remarks>
</member><member name="M:Client.GameCharacter.IsMoveable">
	<summary>
 Obtient l'état de déplacement du personnage
 </summary>
	<returns>True si il est possible de le déplacer, False dans le cas contraire</returns>
	<remarks></remarks>
</member><member name="M:Client.GameCharacter.IsControlable">
	<summary>
 Obtient l'état de controle du personnage
 </summary>
	<returns>True si il est controlable, False dans le cas contraire</returns>
	<remarks></remarks>
</member><member name="P:Client.GameCharacter.Velocity">
	<summary>
 Obtient la vitesse de déplacement du personnage
 </summary>
</member>
</members>
</doc>