<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picRemove.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>