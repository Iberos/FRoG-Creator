<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picNPCCasesArea.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>